"use strict";
class Type {
    constructor(name, definition) {
        this.name = name;
        this.definition = definition;
        if (typeof definition.validate !== 'function') {
            throw new Error(`Type ${name} does not have validate method`);
        }
        this.validate = definition.validate;
    }
    static set(name, definition) {
        Type.types[name] = new Type(name, definition);
    }
    static get(name) {
        return Type.types[name];
    }
    cast(value, config) {
        const { cast } = this.definition;
        return cast ? cast(value, config) : value;
    }
}
Type.types = {};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Type;
