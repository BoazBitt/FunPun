export interface Validator {
    (value: any, config: Object): string | void;
}
export interface TypeDefinition {
    validate: Validator;
    cast?(value: any, config: Object): any;
}
export default class Type {
    name: string;
    definition: TypeDefinition;
    validate: Validator;
    static types: {
        [propName: string]: Type;
    };
    static set(name: string, definition: TypeDefinition): void;
    static get(name: string): Type;
    constructor(name: string, definition: TypeDefinition);
    cast(value: any, config: Object): any;
}
